---
- hosts: localhost
  become: true
  gather_facts: no
  tasks:


  - name: copy install script to server
    copy:
      src: files/install_nginx.sh
      dest: /tmp/install_nginx.sh
      mode: 0700

  - name: run install script
    shell: /tmp/install_nginx.sh >> /tmp/nginx_install.log


  - name: Adding Nginx Repository
    yum_repository:
      name: nginx
      description: Nginx repo
      baseurl: http://nginx.org/packages/mainline/centos/6/$basearch/
      gpgcheck: no
      enabled: yes

  - name: Install Multiple Apps
    yum:
      name: "{{ item }}"
      state: latest
    loop:
    #  - nginx
     - unzip
     - libselinux-python
     - openssl
    #  - chpst

  - name: download runit from a file path
    get_url:
      url: "https://packagecloud.io/imeyer/runit/packages/el/6/runit-2.1.2-1.el6.x86_64.rpm/download.rpm"
      dest: /tmp/runit.rpm

  - name: Install runit rpm locally
    yum:
      name: /tmp/runit.rpm
      state: present

  - name: Create runit directory if it does not exist
    file:
      path: /etc/service
      state: directory
      mode: '0700'

  - name: Copy file with owner and permissions
    copy:
      src: files/nginx
      dest: /etc/service/nginx
      owner: root
      group: root
      mode: '0744'

  # - name: Nginx start your Engines {starting ngnix service}
  #   service:
  #     name: nginx
  #     state: reloaded

  # - name: Enable service Ngnix
  #   service:
  #     name: nginx
  #     enabled: yes

  # - name: Restart Ngnix if nothing has changed
  #   service:
  #     name: nginx
  #     state: restarted

  - name: Create sites-available directory if it does not exist
    file:
      path: /etc/nginx/sites-available/
      state: directory
      mode: '0755'

  - name: Create sites-enabled directory if it does not exist
    file:
      path: /etc/nginx/sites-enabled/
      state: directory
      mode: '0755'

  - name: copy static_site.cfg and restart nginx
    copy:
      src: files/static_site.cfg
      dest: /etc/nginx/sites-available/static_site.cfg

  - name: copy nginx.service
    copy:
      src: files/nginx.service
      dest: /usr/lib/systemd/system/nginx.service


  - name: create symlink
    file:
      src: /etc/nginx/sites-available/static_site.cfg
      dest: /etc/nginx/sites-enabled/default
      state: link
      force: yes

  - name: copy server.conf to conf Directory and restart nginx
    copy:
      src: files/server.conf
      dest: /etc/nginx/conf.d/server.conf


  - name: copy the nginx config file and restart nginx
    copy:
      src: config/nginx.conf
      dest: /etc/nginx/conf

  - name: Create  directory to Public key if it does not exist
    file:
      path: /etc/ssl/certs/
      state: directory
      mode: '0700'

  - name: copy public key to certs Directory and restart nginx
    copy:
      src: files/self-signed.crt
      dest: /etc/ssl/certs/self-signed.crt
    notify:
       - restart nginx

  - name: Create  directory to Private key if it does not exist
    file:
      path: /etc/ssl/private
      state: directory
      mode: '0700'

  - name: copy private key to certs Directory and restart nginx
    copy:
      src: files/self-signed.key
      dest: /etc/ssl/private/self-signed.key

  - name: Diffie-Hellman  create pem
    command: openssl dhparam -dsaparam -out /etc/ssl/certs/dhparam.pem 4096

  - name: Configure Nginx to Use SSL
    copy:
      src: files/ssl.conf
      dest: /etc/nginx/conf.d/ssl.conf
      # listen:
      #   - restart nginx

  - name: Create  directory for application if it does not exist
    file:
      path: /opt/application
      state: directory
      mode: '0700'

  - name: copy private key to certs Directory and restart nginx
    copy:
      src: files/application.zip
      dest: /opt/application.zip

  - name: Unarchive application zip on the remote machine
    unarchive:
      src: /opt/application.zip
      dest: /opt/

  - name: remove application zip file
    file:
      state: absent
      path: /opt/application.zip


